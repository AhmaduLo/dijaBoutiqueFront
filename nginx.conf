# Configuration Nginx pour Dija Boutique Frontend
# Ce fichier doit être placé dans /etc/nginx/sites-available/ ou inclus dans votre configuration

server {
    listen 80;
    listen [::]:80;
    server_name votre-domaine.com www.votre-domaine.com;

    # Force HTTPS en production
    # Décommenter en production
    # return 301 https://$server_name$request_uri;
}

server {
    # Décommenter pour HTTPS en production
    # listen 443 ssl http2;
    # listen [::]:443 ssl http2;
    # ssl_certificate /etc/letsencrypt/live/votre-domaine.com/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/votre-domaine.com/privkey.pem;
    # ssl_protocols TLSv1.2 TLSv1.3;
    # ssl_ciphers HIGH:!aNULL:!MD5;

    # En développement (HTTP)
    listen 80;
    listen [::]:80;

    server_name votre-domaine.com www.votre-domaine.com;

    # Racine du projet (après build Angular)
    root /var/www/dija-boutique/browser;
    index index.html;

    # Logs
    access_log /var/log/nginx/dija-boutique-access.log;
    error_log /var/log/nginx/dija-boutique-error.log;

    # Compression Gzip
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss;

    # Security Headers
    add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; img-src 'self' data: https:; font-src 'self' data: https://fonts.gstatic.com; connect-src 'self' http://localhost:8080 https://api.dijaboutique.com; frame-ancestors 'none'; base-uri 'self'; form-action 'self';" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    # Décommenter pour HTTPS en production
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # Cache des assets statiques
    location ~* \.(jpg|jpeg|png|gif|ico|svg|webp)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    location ~* \.(css|js|woff|woff2|ttf|eot)$ {
        expires 1M;
        add_header Cache-Control "public";
    }

    # Pas de cache pour index.html
    location = /index.html {
        expires -1;
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
    }

    # Angular routing - toutes les routes redirigent vers index.html
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Bloquer l'accès aux fichiers sensibles
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~* \.(env|log|md|json)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Désactiver l'affichage du numéro de version Nginx
    server_tokens off;
}
